{"files":[{"id":"d119d3cb-e084-450b-ba41-1864fd1231b0","name":"Code","type":"server_js","source":"/**\n* Author: Albion Fung\n*\n* This software may be redistributed, used and modified freely in anyway, as long as the software\n* has this same condition. No credits are required.\n*\n* ALWAYS USE THE OLDEST RELEASE OF EACH VERSION FOR STABLE BUILD.\n*\n* v1.51d\n*\n* ------------------------------------------------------------------------------------------------\n*\n* Known issues for v1.51c\n* - Ties currently display the first header item in the tie only.\n* - There is no API to modify notification settings for triggers, so you will continue to get\n* email notification. There is no way to fix this.\n* - Attempt at allowing edit failed; there is no way to track previous response yet, needed\n* to fix the vote counts (ie, to decrement).\n*\n* ------------------------------------------------------------------------------------------------\n*\n* Upcoming features\n* - Allow modifying user\u0027s own answers.\n*\n* ------------------------------------------------------------------------------------------------\n*\n* Changelog\n*\n* v1.5d:\n* - Added Sai\u0027s email to the list\n*\n* v1.51c:\n* - N/A\n*\n* v1.51b:\n* - Added Antonio\u0027s email to the list\n*\n* v1.51a:\n* - Minor text fixes (html)\n* - Version var\n*\n* v1.5:\n* - Now only deletes triggers that calls updateResponse.\n* - Fixed a problem where previous does not appear backwards (it\u0027s supposed to).\n*\n* v1.4a:\n* - Added ability for user to use test email. Can be set with variables at the top.\n*\n* v1.4:\n* - Variables for important stuff is now at the top for easier access.\n* - Fixed a problem where previous location was gibberish.\n*\n* v1.3CB:\n* - Each user is now only allowed to submit the form once.\n*\n* v1.2CB:\n* - Now removes all old forms.\n* - Now also removes all old triggers.\n*\n* v1.1CB:\n* - Now parses others and add them to the columns.\n* - Places is now reliant on header row.\n*\n* v1.0CB:\n* - Now uses checkboxes instead of multiple choice, allowing voting of multiple items.\n* - Others option is now parsed properly.\n* - Vote counting has been fixed.\n*\n* v1.0:\n* - Initial Release.\n*/\n\n// form name\nvar item \u003d \"Team lunch Voting Form\";\n// form description\nvar description \u003d \u0027Previous locations (most recent to least recent):\u0027;\n// set to true if you want to append a list to the end of the description.\n// the list is taken from the second column of items\nvar usePrevious \u003d true;\n// spreadsheet name; please ensure this spreadsheet and the following sheet exists before running script\nvar sSheetName \u003d \"Food history\";\n// sheet name\nvar sheetName \u003d \"History\";\n// if you need to test and only send email to yourself, set to true\nvar useTestEmail \u003d false;\n// your testing email\nvar testEmail \u003d \"albion.fung@caseware.com\"\n// emails\nvar emails \u003d [\"albion.fung@caseware.com\", \"bucky.nguyen@caseware.com\", \"keegan.caradonna@caseware.com\", \"mike.lin@caseware.com\",\n              \"mikhail.mokhov@caseware.com\", \"sandra.park@caseware.com\", \"antonio.ng@caseware.com\",\n             \"saiharan.nisakaran@caseware.com\"];\n// subject of the email\nvar subject \u003d \"Vote for lunch \" + (new Date).toLocaleDateString();\n// body of email\nvar htmlBody \u003d \"\";\n\n// Do not change\nvar version \u003d \u00271.51d\u0027;\n\nfunction createForm() {\n  var i; // universal index var\n  \n  // delete all old forms\n  var oldForms \u003d DriveApp.getFilesByName(item);\n  while(oldForms.hasNext()) {\n    i \u003d oldForms.next();\n    i.setTrashed(true);\n  }\n  // now we make a new one\n  var form \u003d FormApp.create(item).setTitle(item);\n  // Note: this disallows the script to submit responses, change to false if you need\n  form.setLimitOneResponsePerUser(true);\n  // form.setAllowResponseEdits(true); // see known issues\n\n  var files \u003d DriveApp.getFilesByName(sSheetName);\n  var ss \u003d {};\n  ss.getName \u003d function() {return \u0027\u0027;};\n  while (files.hasNext() \u0026\u0026 ss.getName() !\u003d\u003d sSheetName) {\n    ss \u003d files.next();\n  }\n  ss \u003d SpreadsheetApp.open(ss);\n  var sheet \u003d ss.getSheetByName(sheetName);\n\n  // get a list of previously visited places. Requires usePrevious \u003d true\n  var previous \u003d usePrevious ? sheet.getRange(1, 2, sheet.getLastRow()).getValues() : [];\n  for (i \u003d 0; i \u003c previous.length - 1; i++) {\n    description +\u003d \u0027\\n\u0027+ previous[previous.length - 1 - i];\n  }\n  form.setDescription(description);\n  \n  // declare choices of food places\n  var places \u003d sheet.getRange(1, 3, 1, sheet.getLastColumn()).getValues()[0].filter(function(entry) { return /\\S/.test(entry); });\n  // theoretically will never happen:\n  places \u003d places || [\u0027Asian Bowl\u0027, \u0027Bikkuri\u0027, \u0027Kaiju\u0027, \u0027Khao San\u0027, \u0027Golden Thai\u0027, \u0027Gyu Kaku\u0027,\n               \u0027On The Rocks\u0027, \u0027Sukhothai\u0027, \u0027Noodle King\u0027, \u0027Phoenix\u0027, \u0027Hokkaido Ramen Santouka\u0027,\n               \u0027TCJ\u0027, \u0027Yummy Bar-B-Q\u0027, \u0027Nami\u0027, \u0027Ramen Raijin\u0027, \u0027Shwarma place next to TCJ\u0027];\n\n  // add the multiple choice\n  form.addCheckboxItem().showOtherOption(true).setTitle(\u0027Restaurant\u0027).setChoiceValues(places).setRequired(true);\n\n  // remove all previous triggers created by forms\n  var triggers \u003d ScriptApp.getProjectTriggers();\n  for (i \u003d 0; i \u003c triggers.length; i++) {\n    if(triggers[i].getHandlerFunction() \u003d\u003d\u003d \u0027updateResponse\u0027)\n      ScriptApp.deleteTrigger(triggers[i]);\n  }\n\n  ScriptApp.newTrigger(\u0027updateResponse\u0027).forForm(form).onFormSubmit().create();\n\n  htmlBody \u003d \"\u003cp\u003eFill out form: \u003ca href\u003d\u0027\" + form.getPublishedUrl() + \"\u0027\u003ehere\u003c/a\u003e\u003c/p\u003e\" + \n  \"\u003cH2\u003e DO NOT MODIFY THE EXCEL FILE, THE SCRIPT MAY NOT WORK CORRECTLY. THERE IS CURRENTLY NO WAY TO EDIT YOUR RESPONSES.\u003c/H2\u003e\" +\n    \"\u003cp\u003eExcel history: \" +\n      \"\u003ca href\u003d\u0027https://docs.google.com/spreadsheets/d/1ece_HgYxSAWhpihP_RMzCqnJiPGM30DJ471RSMXLKR0/edit#gid\u003d0\u0027\u003ehere\u003c/a\u003e\u003c/p\u003e\" +\n        \"\u003cp\u003ev\" + version + \"\u003c/p\u003e\" + \"\u003cp\u003e\u003ca href\u003d\u0027\" +\n          \"https://script.google.com/d/1wUWUTa3h4z_AqQBGfhaUcS_FHMwQjH_nDaHA3b91vGW4XihLuneeCCd-/edit?usp\u003dsharing\u0027\u003e\" +\n            \"Source Code\u003c/a\u003e\u003c/p\u003e\";\n  \n  var emailList \u003d useTestEmail ? [testEmail] : emails;\n  for (i in emailList) {\n    MailApp.sendEmail({\n      to : emailList[i],\n      subject: subject,\n      htmlBody: htmlBody\n    });\n  }\n};\n\nfunction updateResponse(e) {\n  var files \u003d DriveApp.getFilesByName(sSheetName);\n  var ss \u003d {};\n  ss.getName \u003d function() {return \u0027\u0027;};\n  while (files.hasNext() \u0026\u0026 ss.getName() !\u003d\u003d sSheetName) {\n    ss \u003d files.next();\n  }\n  ss \u003d SpreadsheetApp.open(ss);\n\n  // Create new row if necessary\n  var date \u003d new Date().toLocaleDateString();\n  var sheet \u003d ss.getSheetByName(sheetName);\n  var lastRow \u003d sheet.getLastRow();\n  if(lastRow \u003d\u003d\u003d 0) {\n   sheet.appendRow([\u0027Date\u0027].concat(places));\n   lastRow +\u003d 1;\n  }\n  var lastDate \u003d sheet.getRange(lastRow, 1);\n  if(new Date(lastDate.getValue()).toLocaleDateString() !\u003d\u003d date) {\n    sheet.getRange(lastRow + 1, 1).setValue(date);\n    lastRow +\u003d 1;\n  }\n  \n  var response, col;\n  var data \u003d sheet.getDataRange().getValues();\n  var formResponse \u003d e.response.getItemResponses();\n  var responses \u003d formResponse[0].getResponse();\n  var response;\n  \n  for(i  \u003d 0; i \u003c responses.length; i++) {\n    response \u003d responses[i];\n    col \u003d data[0].indexOf(response) + 1;\n \n    // not an existing option\n    if(col \u003d\u003d\u003d 0) {\n      // split up others and added it to array\n      responses.splice(responses.length - 1);\n      responses \u003d responses.concat(getOtherArray(response));\n      Logger.log(responses);\n      response \u003d responses[i];\n      col \u003d sheet.getLastColumn() + 1;\n      sheet.getRange(1, col).setValue(response);\n    }\n    \n    var newVal;\n    if(sheet.getRange(lastRow, col).getValue())\n      newVal \u003d sheet.getRange(lastRow, col).getValue() + 1;\n    else\n      newVal \u003d 1;\n    sheet.getRange(lastRow, col).setValue(newVal);\n  }\n  \n  sheet.getRange(lastRow, 2).setValue(\u0027\u003dINDEX(C$1:$1, 1, MATCH(MAX(C\u0027 + lastRow + \n                                                          \u0027:\u0027 + lastRow + \u0027), C\u0027 + lastRow + \u0027:\u0027 + lastRow +\n                                                          \u0027, 0))\u0027);\n};\n\nfunction getOtherArray(inArr) {\n  var newArr \u003d inArr.split(\u0027,\u0027);\n  newArr.forEach(function(part, index, theArray) {\n    theArray[index] \u003d camelCase(part);\n  });\n\n  return newArr;\n};\n\nfunction camelCase(inStr) {\n  inStr \u003d inStr.replace(/\\s(.)/g, function($1) { return $1.toUpperCase(); }).replace(/^(\\s)/, \u0027\u0027).replace(/^(.)/, function($1) { return $1.toUpperCase(); });\n  inStr \u003d inStr.replace(/(\\s)$/, \u0027\u0027);\n  Logger.log(inStr);\n  return inStr;\n};\n"},{"id":"0002ba02-8083-480a-a9ed-5ec1fa907416","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/New_York\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\"\n}"}]}